load("~/Documents/GitHub/datasciencecoursera/Week 2 Quiz/Week2Quiz.RData")
load("~/Documents/GitHub/datasciencecoursera/Week 2 Quiz/Week2Quiz.RData")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
source('~/Documents/coursera/getdata-014/courseproject/run_analysis.R')
names(X_TRAIN_TEST_combined_tidy)
source('~/Documents/coursera/getdata-014/courseproject/run_analysis.R')
dim(X_TRAIN_TEST_combined)
name(X_TEST_activity)
names(X_TEST_activity)
source('~/Documents/coursera/getdata-014/courseproject/run_analysis.R')
source('~/Documents/coursera/getdata-014/courseproject/run_analysis.R')
head(X_TRAIN_TEST_combined_tidy,1)
View(features)
View(features)
library(dpltr)
library(dplyr)
?dplyr
browseVignettes(package = "dplyr")
mpg
install.packages("mpg")
install.packages("ggplot2")
mpg
library(ggplot2)
mpg
mpg <- tbl_df(mpg)
library(dplyr)
mpg <- tbl_df(mpg)
mpg
?dplyr
browseVignettes(package = "dplyr")
filter(mpg,model == a4)
filter(mpg,model = a4)
filter(mpg,model)
filter(mpg,model == a4)
filter(mpg,mpg.model == a4)
filter(mpg,mpg.model == "a4")
filter(mpg,model == "a4")
filter(mpg,!model == "a4")
swirl()
library(swirl)
swirl()
cran %>% select(ip_id,country,package,size) %>% print
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dtl
dt1
ymd_hms(dt1)
ymd_hms("03:22:14")
hms("03:22:14")
View(dt2)
dt2
ymd(dt2)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 24)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
mdy("June 17, 2008",tz = "Singapore")
last_time <- mdy("June 17, 2008",tz ="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
cran %>% select (ip_id,country,package,size) %>% print
swirl()
d
cran
cran %>% select(ip_id)
cran %>% select()
swirl
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
cran %>% select(ip_id,country,package,size) %>% print
cran %>% select(ip_id,country,package,size)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
library(swirl)
swirl()
cran %>% select (ip_id,country,package,size) print
cran %>% select (ip_id,country,package,size) %>% print
swirl()
library(tidyr)
students
?gather
gather(student,sex,count,-grade)
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex,sex_class,count)
res <- gather(students2,sex,sex_class)
res <- gather(students2,sex,sex_class,count,-grade)
res <- gather(students2,sex_class,count,-grade)
res
?separate()
?separate
separate(res,sex_class, c("sex","class"))
submit()
submit()
submit()
submit()
student3
students3
library(swirl)
swirl()
submit()
submit()
print
submit()
submit()
submit()
setwd("~/Documents/GitHub/ExData_Plotting1")
loadpowerdata <- function () {
library(dplyr)
library(lubridate)
## Requires DPLYR package
## Exploratory Data Analysis  Course Project 1
## Read downloaded file
dataEpc <- read.csv (file="./data/household_power_consumption.txt"
,header=TRUE
,sep =";"
,stringsAsFactors = FALSE)
dataEpc <- tbl_df(dataEpc)
## alternate way to read csv file and filter on date
## dataEpc2007 <- read.csv.sql("./data/household_power_consumption.txt"
##                    ,sql = 'select * from file where Date = "2/1/2007" OR Date = "2/2/2007"'
##                        ,sep =";")
## closeAllConnections()
## Select only 2 days worth of observations
dataEpc2007 <- filter(dataEpc,Date == '2/1/2007' | Date == "2/2/2007")
## verify needs records are there.
filter(dataEpc2007,Date == '2/1/2007')
filter(dataEpc2007,Date == '2/2/2007')
## add a Weekday column "Mon", "Tue" etc
dataEpc2007 <- mutate(dataEpc2007, Weekday = wday(mdy(Date), label = TRUE, abbr = TRUE))
## add Timestamp column
dataEpc2007 <- mutate (dataEpc2007, Timestamp=as.POSIXct(paste(Date, Time)))
## convert variables to numeric
dataEpc2007$Global_active_power = as.numeric(dataEpc2007$Global_active_power)
dataEpc2007$Global_reactive_power = as.numeric(dataEpc2007$Global_reactive_power)
dataEpc2007$Global_reactive_power = as.numeric(dataEpc2007$Global_reactive_power)
dataEpc2007$Voltage = as.numeric(dataEpc2007$Voltage)
dataEpc2007$Sub_metering_1 = as.numeric(dataEpc2007$Sub_metering_1)
dataEpc2007$Sub_metering_2 = as.numeric(dataEpc2007$Sub_metering_2)
dataEpc2007$Sub_metering_3 = as.numeric(dataEpc2007$Sub_metering_3)
dataEpc2007$Date = as.Date(mdy(dataEpc2007$Date))
dataEpc2007$Weekday = as.character(dataEpc2007$Weekday)
## dataEpc, not needed
rm(dataEpc)
}
source('~/Documents/GitHub/ExData_Plotting1/loadpowerdata.R')
loadpowerdata
loadpowerdata <- function () {
library(dplyr)
library(lubridate)
## Requires DPLYR package
## Exploratory Data Analysis  Course Project 1
## Read downloaded file
dataEpc <- read.csv (file="./data/household_power_consumption.txt"
,header=TRUE
,sep =";"
,stringsAsFactors = FALSE)
dataEpc <- tbl_df(dataEpc)
## alternate way to read csv file and filter on date
## dataEpc2007 <- read.csv.sql("./data/household_power_consumption.txt"
##                    ,sql = 'select * from file where Date = "2/1/2007" OR Date = "2/2/2007"'
##                        ,sep =";")
## closeAllConnections()
## Select only 2 days worth of observations
dataEpc2007 <- filter(dataEpc,Date == '2/1/2007' | Date == "2/2/2007")
## verify needs records are there.
filter(dataEpc2007,Date == '2/1/2007')
filter(dataEpc2007,Date == '2/2/2007')
## add a Weekday column "Mon", "Tue" etc
dataEpc2007 <- mutate(dataEpc2007, Weekday = wday(mdy(Date), label = TRUE, abbr = TRUE))
## add Timestamp column
dataEpc2007 <- mutate (dataEpc2007, Timestamp=as.POSIXct(paste(Date, Time)))
## convert variables to numeric
dataEpc2007$Global_active_power = as.numeric(dataEpc2007$Global_active_power)
dataEpc2007$Global_reactive_power = as.numeric(dataEpc2007$Global_reactive_power)
dataEpc2007$Global_reactive_power = as.numeric(dataEpc2007$Global_reactive_power)
dataEpc2007$Voltage = as.numeric(dataEpc2007$Voltage)
dataEpc2007$Sub_metering_1 = as.numeric(dataEpc2007$Sub_metering_1)
dataEpc2007$Sub_metering_2 = as.numeric(dataEpc2007$Sub_metering_2)
dataEpc2007$Sub_metering_3 = as.numeric(dataEpc2007$Sub_metering_3)
dataEpc2007$Date = as.Date(mdy(dataEpc2007$Date))
dataEpc2007$Weekday = as.character(dataEpc2007$Weekday)
## dataEpc, not needed
rm(dataEpc)
}
dataEpc <- read.csv (file="./data/household_power_consumption.txt"
,header=TRUE
,sep =";"
,stringsAsFactors = FALSE)
dataEpc <- tbl_df(dataEpc)
library(dplyr)
library(lubridate)
## Requires DPLYR package
## Exploratory Data Analysis  Course Project 1
## Read downloaded file
dataEpc <- read.csv (file="./data/household_power_consumption.txt"
,header=TRUE
,sep =";"
,stringsAsFactors = FALSE)
dataEpc <- tbl_df(dataEpc)
dataEpc2007 <- filter(dataEpc,Date == '2/1/2007' | Date == "2/2/2007")
dataEpc2007 <- mutate (dataEpc2007, Timestamp=paste(Date, Time))
View(dataEpc2007)
dataEpc2007$Timestamp = strptime(dataEpc2007$Timestamp,"%m %d %Y %H:%M:%S")
class(dataEpc2007$Timestamp)
dataEpc2007 <- mutate (dataEpc2007, Timestamp=paste(Date, Time))
dataEpc2007$Timestamp = strptime(dataEpc2007$Timestamp,"%m %d %Y %H:%M:%S")
plot(dataEpc2007$Timestamp,dataEpc2007$Global_active_power
,ylab = "Global Active Power (kilowatts)",xlab="",type="l")
plot(dataEpc2007$Timestamp,dataEpc2007$Global_active_power
,ylab = "Global Active Power (kilowatts)",xlab="",type="l")
plot(dataEpc2007$Timestamp,dataEpc2007$Global_active_power
,ylab = "Global Active Power (kilowatts)",xlab="",type="l")
plot(dataEpc2007$Timestamp,dataEpc2007$Global_active_power
,ylab = "Global Active Power (kilowatts)",xlab="",type="l")
source('~/Documents/GitHub/ExData_Plotting1/loadpowerdata.R')
